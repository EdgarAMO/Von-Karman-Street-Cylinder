/*----------/*--------------------------------*- C++ -*-----------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include 			"../constants"

convertToMeters 1;

RPOS		#calc" $D / 2";
RNEG		#calc"-$D / 2";
REXTPOS		#calc" $D";
REXTNEG		#calc"-$D";
IN			#calc"-3 * $D";
OUT1		#calc" 6 * $D";
OUT2		#calc" 12 * $D";
YPOS		#calc" 4 * $D";
YNEG		#calc"-4 * $D";
ZPOS		#calc" $W * $D";
ZNEG		#calc"-$W * $D";
A1			#calc "degToRad(45)";
A2			#calc "degToRad(135)";
A3			#calc "degToRad(225)";
A4			#calc "degToRad(315)";
B1			#calc "degToRad(22.5)";
B2			#calc "degToRad(67.5)";
B3			#calc "degToRad(112.5)";
B4			#calc "degToRad(157.5)";
B5			#calc "degToRad(202.5)";
B6			#calc "degToRad(247.5)";
B7			#calc "degToRad(292.5)";
B8			#calc "degToRad(337.5)";
NR			30;		// arc zones radial no. of nodes
NT			15;		// arc zones angular no. of nodes (along the arc)
NW			60;		// first downwind zone streamwise no. of nodes
NS			30; 	// domain sides no. of nodes (crowsswind)
NI			25;		// upwind blocks streamwise no. of nodes
NF			40;		// second downwind zone streamwise no.of nodes
GR			7.5; 	// arc zones radial grading
GS			5;		// domain sides grading
GI			0.2;	// inverse of the above grading (1 / GS)


vertices
(	
	// BACK * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	/* inner ring */
    ($RPOS 							0.00						$ZNEG) //0
	(#calc"$RPOS * cos($A1)"		#calc"$RPOS * sin($A1)"		$ZNEG) //1
	(0.00							$RPOS						$ZNEG) //2
	(#calc"$RPOS * cos($A2)"		#calc"$RPOS * sin($A2)"		$ZNEG) //3
	($RNEG							0.00						$ZNEG) //4
	(#calc"$RPOS * cos($A3)"		#calc"$RPOS * sin($A3)"		$ZNEG) //5
	(0.00							$RNEG						$ZNEG) //6
	(#calc"$RPOS * cos($A4)"		#calc"$RPOS * sin($A4)"		$ZNEG) //7

	/* outer ring */
    ($REXTPOS 						0.00						$ZNEG) //8
	(#calc"$REXTPOS * cos($A1)"		#calc"$REXTPOS * sin($A1)"	$ZNEG) //9
	(0.00							$REXTPOS					$ZNEG) //10
	(#calc"$REXTPOS * cos($A2)"		#calc"$REXTPOS * sin($A2)"	$ZNEG) //11
	($REXTNEG						0.00						$ZNEG) //12
	(#calc"$REXTPOS * cos($A3)"		#calc"$REXTPOS * sin($A3)"	$ZNEG) //13
	(0.00							$REXTNEG					$ZNEG) //14
	(#calc"$REXTPOS * cos($A4)"		#calc"$REXTPOS * sin($A4)"	$ZNEG) //15

	/*   */
	($OUT1							#calc"$REXTPOS * sin($A4)"	$ZNEG) //16
	($OUT1							0.00						$ZNEG) //17
	($OUT1							#calc"$REXTPOS * sin($A1)"	$ZNEG) //18
	($OUT1							$YPOS						$ZNEG) //19
	(#calc"$REXTPOS * cos($A1)"		$YPOS						$ZNEG) //20
	(0.00							$YPOS						$ZNEG) //21
	(#calc"$REXTPOS * cos($A2)"		$YPOS						$ZNEG) //22
	($IN							$YPOS						$ZNEG) //23
	($IN							#calc"$REXTPOS * sin($A2)"	$ZNEG) //24
	($IN							0.00						$ZNEG) //25
	($IN							#calc"$REXTPOS * sin($A3)"	$ZNEG) //26
	($IN							$YNEG						$ZNEG) //27
	(#calc"$REXTPOS * cos($A3)"		$YNEG						$ZNEG) //28
	(0.00							$YNEG						$ZNEG) //29
	(#calc"$REXTPOS * cos($A4)"		$YNEG						$ZNEG) //30
	($OUT1							$YNEG						$ZNEG) //31


	/* tail */
	($OUT2							$YNEG						$ZNEG) //32
	($OUT2							#calc"$REXTPOS * sin($A4)"	$ZNEG) //33
	($OUT2							0.00						$ZNEG) //34
	($OUT2							#calc"$REXTPOS * sin($A1)"	$ZNEG) //35
	($OUT2							$YPOS						$ZNEG) //36

	// FRONT * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
	/* inner ring */
    ($RPOS 							0.00						$ZPOS) //37
	(#calc"$RPOS * cos($A1)"		#calc"$RPOS * sin($A1)"		$ZPOS) //38
	(0.00							$RPOS						$ZPOS) //39
	(#calc"$RPOS * cos($A2)"		#calc"$RPOS * sin($A2)"		$ZPOS) //40
	($RNEG							0.00						$ZPOS) //41
	(#calc"$RPOS * cos($A3)"		#calc"$RPOS * sin($A3)"		$ZPOS) //42
	(0.00							$RNEG						$ZPOS) //43
	(#calc"$RPOS * cos($A4)"		#calc"$RPOS * sin($A4)"		$ZPOS) //44

	/* outer ring */
    ($REXTPOS 						0.00						$ZPOS) //45
	(#calc"$REXTPOS * cos($A1)"		#calc"$REXTPOS * sin($A1)"	$ZPOS) //46
	(0.00							$REXTPOS					$ZPOS) //47
	(#calc"$REXTPOS * cos($A2)"		#calc"$REXTPOS * sin($A2)"	$ZPOS) //48
	($REXTNEG						0.00						$ZPOS) //49
	(#calc"$REXTPOS * cos($A3)"		#calc"$REXTPOS * sin($A3)"	$ZPOS) //50
	(0.00							$REXTNEG					$ZPOS) //51
	(#calc"$REXTPOS * cos($A4)"		#calc"$REXTPOS * sin($A4)"	$ZPOS) //52

	/*   */
	($OUT1							#calc"$REXTPOS * sin($A4)"	$ZPOS) //53
	($OUT1							0.00						$ZPOS) //54
	($OUT1							#calc"$REXTPOS * sin($A1)"	$ZPOS) //55
	($OUT1							$YPOS						$ZPOS) //56
	(#calc"$REXTPOS * cos($A1)"		$YPOS						$ZPOS) //57
	(0.00							$YPOS						$ZPOS) //58
	(#calc"$REXTPOS * cos($A2)"		$YPOS						$ZPOS) //59
	($IN							$YPOS						$ZPOS) //60
	($IN							#calc"$REXTPOS * sin($A2)"	$ZPOS) //61
	($IN							0.00						$ZPOS) //62
	($IN							#calc"$REXTPOS * sin($A3)"	$ZPOS) //63
	($IN							$YNEG						$ZPOS) //64
	(#calc"$REXTPOS * cos($A3)"		$YNEG						$ZPOS) //65
	(0.00							$YNEG						$ZPOS) //66
	(#calc"$REXTPOS * cos($A4)"		$YNEG						$ZPOS) //67
	($OUT1							$YNEG						$ZPOS) //68


	/* tail */
	($OUT2							$YNEG						$ZPOS) //69
	($OUT2							#calc"$REXTPOS * sin($A4)"	$ZPOS) //70
	($OUT2							0.00						$ZPOS) //71
	($OUT2							#calc"$REXTPOS * sin($A1)"	$ZPOS) //72
	($OUT2							$YPOS						$ZPOS) //73
);

blocks
(   
    hex (0  8  9  1  37 45 46 38) ($NR $NT 5) simpleGrading ($GR 1   1)
	hex (1  9  10 2  38 46 47 39) ($NR $NT 5) simpleGrading ($GR 1   1)
	hex (2  10 11 3  39 47 48 40) ($NR $NT 5) simpleGrading ($GR 1   1)
	hex (3  11 12 4  40 48 49 41) ($NR $NT 5) simpleGrading ($GR 1   1)
	hex (4  12 13 5  41 49 50 42) ($NR $NT 5) simpleGrading ($GR 1   1)
	hex (5  13 14 6  42 50 51 43) ($NR $NT 5) simpleGrading ($GR 1   1)
	hex (6  14 15 7  43 51 52 44) ($NR $NT 5) simpleGrading ($GR 1   1)
	hex (7  15 8  0  44 52 45 37) ($NR $NT 5) simpleGrading ($GR 1   1) 
	hex (8  17 18 9  45 54 55 46) ($NW $NT 5) simpleGrading (1   1   1)
	hex (9  18 19 20 46 55 56 57) ($NW $NS 5) simpleGrading (1   $GS 1)
	hex (9  20 21 10 46 57 58 47) ($NS $NT 5) simpleGrading ($GS 1   1)
	hex (10 21 22 11 47 58 59 48) ($NS $NT 5) simpleGrading ($GS 1   1)
	hex (11 22 23 24 48 59 60 61) ($NS $NI 5) simpleGrading ($GS 1   1)
	hex (11 24 25 12 48 61 62 49) ($NI $NT 5) simpleGrading (1   1   1)
	hex (12 25 26 13 49 62 63 50) ($NI $NT 5) simpleGrading (1   1   1)
	hex (13 26 27 28 50 63 64 65) ($NI $NS 5) simpleGrading (1   $GS 1)
	hex (13 28 29 14 50 65 66 51) ($NS $NT 5) simpleGrading ($GS 1   1)
	hex (14 29 30 15 51 66 67 52) ($NS $NT 5) simpleGrading ($GS 1   1)
	hex (15 30 31 16 52 67 68 53) ($NS $NW 5) simpleGrading ($GS 1   1)
	hex (15 16 17 8  52 53 54 45) ($NW $NT 5) simpleGrading (1   1   1)
	hex (17 34 35 18 54 71 72 55) ($NF $NT 5) simpleGrading (1   1   1)
	hex (18 35 36 19 55 72 73 56) ($NF $NS 5) simpleGrading (1   $GS 1)
	hex (31 32 33 16 68 69 70 53) ($NF $NS 5) simpleGrading (1   $GI 1)
	hex (16 33 34 17 53 70 71 54) ($NF $NT 5) simpleGrading (1   1   1)
);

edges
(
	arc 0  1  (#calc"$RPOS * cos($B1)"		#calc"$RPOS * sin($B1)"			$ZNEG)
	arc 1  2  (#calc"$RPOS * cos($B2)"		#calc"$RPOS * sin($B2)"			$ZNEG)
	arc 2  3  (#calc"$RPOS * cos($B3)"		#calc"$RPOS * sin($B3)"			$ZNEG)
	arc 3  4  (#calc"$RPOS * cos($B4)"		#calc"$RPOS * sin($B4)"			$ZNEG)
	arc 4  5  (#calc"$RPOS * cos($B5)"		#calc"$RPOS * sin($B5)"			$ZNEG)
	arc 5  6  (#calc"$RPOS * cos($B6)"		#calc"$RPOS * sin($B6)"			$ZNEG)
	arc 6  7  (#calc"$RPOS * cos($B7)"		#calc"$RPOS * sin($B7)"			$ZNEG)
	arc 7  0  (#calc"$RPOS * cos($B8)"		#calc"$RPOS * sin($B8)"			$ZNEG)
	arc 8  9  (#calc"$REXTPOS * cos($B1)"	#calc"$REXTPOS * sin($B1)"		$ZNEG)
	arc 9  10 (#calc"$REXTPOS * cos($B2)"	#calc"$REXTPOS * sin($B2)"		$ZNEG)
	arc 10 11 (#calc"$REXTPOS * cos($B3)"	#calc"$REXTPOS * sin($B3)"		$ZNEG)
	arc 11 12 (#calc"$REXTPOS * cos($B4)"	#calc"$REXTPOS * sin($B4)"		$ZNEG)
	arc 12 13 (#calc"$REXTPOS * cos($B5)"	#calc"$REXTPOS * sin($B5)"		$ZNEG)
	arc 13 14 (#calc"$REXTPOS * cos($B6)"	#calc"$REXTPOS * sin($B6)"		$ZNEG)
	arc 14 15 (#calc"$REXTPOS * cos($B7)"	#calc"$REXTPOS * sin($B7)"		$ZNEG)
	arc 15 8  (#calc"$REXTPOS * cos($B8)"	#calc"$REXTPOS * sin($B8)"		$ZNEG)

	arc 37 38 (#calc"$RPOS * cos($B1)"		#calc"$RPOS * sin($B1)"			$ZPOS)
	arc 38 39 (#calc"$RPOS * cos($B2)"		#calc"$RPOS * sin($B2)"			$ZPOS)
	arc 39 40 (#calc"$RPOS * cos($B3)"		#calc"$RPOS * sin($B3)"			$ZPOS)
	arc 40 41 (#calc"$RPOS * cos($B4)"		#calc"$RPOS * sin($B4)"			$ZPOS)
	arc 41 42 (#calc"$RPOS * cos($B5)"		#calc"$RPOS * sin($B5)"			$ZPOS)
	arc 42 43 (#calc"$RPOS * cos($B6)"		#calc"$RPOS * sin($B6)"			$ZPOS)
	arc 43 44 (#calc"$RPOS * cos($B7)"		#calc"$RPOS * sin($B7)"			$ZPOS)
	arc 44 37 (#calc"$RPOS * cos($B8)"		#calc"$RPOS * sin($B8)"			$ZPOS)
	arc 45 46 (#calc"$REXTPOS * cos($B1)"	#calc"$REXTPOS * sin($B1)"		$ZPOS)
	arc 46 47 (#calc"$REXTPOS * cos($B2)"	#calc"$REXTPOS * sin($B2)"		$ZPOS)
	arc 47 48 (#calc"$REXTPOS * cos($B3)"	#calc"$REXTPOS * sin($B3)"		$ZPOS)
	arc 48 49 (#calc"$REXTPOS * cos($B4)"	#calc"$REXTPOS * sin($B4)"		$ZPOS)
	arc 49 50 (#calc"$REXTPOS * cos($B5)"	#calc"$REXTPOS * sin($B5)"		$ZPOS)
	arc 50 51 (#calc"$REXTPOS * cos($B6)"	#calc"$REXTPOS * sin($B6)"		$ZPOS)
	arc 51 52 (#calc"$REXTPOS * cos($B7)"	#calc"$REXTPOS * sin($B7)"		$ZPOS)
	arc 52 45 (#calc"$REXTPOS * cos($B8)"	#calc"$REXTPOS * sin($B8)"		$ZPOS)
);

boundary
(
    walls
    {
        type wall;
        faces
        (
            (0 1 38 37)
            (1 2 39 38)
            (2 3 40 39)
            (3 4 41 40)
			(4 5 42 41)
			(5 6 43 42)
			(6 7 44 43)
			(7 0 37 44)
        );
    }

    inlet
    {
        type patch;
        faces
        (
            (23 24 61 60)
			(24 25 62 61)
			(25 26 63 62)
			(26 27 64 63)            
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (35 36 73 72)
			(34 35 72 71)
			(33 34 71 70)
			(32 33 70 69)	            
        );
    }

    top
    {
        type wall;
        faces
        (
            (22 23 60 59)
            (21 22 59 58)
			(20 21 58 57)
			(19 20 57 56)
			(36 19 56 73)            
        );
    }

    bottom
    {
        type wall;
        faces
        (
            (27 28 65 64)
			(28 29 66 65)
			(29 30 67 66)
			(30 31 68 67)
			(31 32 69 68)          
        );
    }

	back
	{
		type symmetryPlane;
		faces
		(
			(24 23 22 11)
			(11 22 21 10)
			(10 21 20 9)
			(9  20 19 18)
			(18 19 36 35)
			(25 24 11 12)
			(8	9  18 17)
			(17 18 35 34)
			(26 25 12 13)
			(15 8  17 16)
			(16 17 34 33)
			(27 26 13 28)
			(28 13 14 29)
			(29 14 15 30)
			(30 15 16 31)
			(31 16 33 32)
			(4  12 11 3)
			(3  11 10 2)
			(2  10 9  1)
			(1  9  8  0)
			(0  8  15 7)
			(7  15 14 6)
			(6  14 13 5)
			(5  13 12 4)
		);
	}

	front
	{
		type symmetryPlane;
		faces
		(
			(48 59 60 61)
			(47 58 59 48)
			(46 57 58 47)
			(55 56 57 46)
			(72 73 56 55)
			(49 48 61 62)
			(54 55 46 45)
			(71 72 55 54)
			(50 49 62 63)
			(53 54 45 52)
			(70 71 54 53)
			(65 50 63 64)
			(66 51 50 65)
			(67 52 51 66)
			(68 53 52 67)
			(69 70 53 68)
			(37 45 46 38)
			(38 46 47 39)
			(39 47 48 40)
			(40 48 49 41)
			(41 49 50 42)
			(42 50 51 43)
			(43 51 52 44)
			(44 52 45 37)
		);
	}

);

mergePatchPairs
(
);

// Bye-ee!

// ************************************************************************* //
